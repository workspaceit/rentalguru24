<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

       <mvc:annotation-driven>
              <mvc:message-converters>
                     <!--json.MappingJackson2HttpMessageConverter-->
                     <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                            <property name="objectMapper">
                                   <bean class="json.HibernateAwareObjectMapper" >
                                          <!--<property name="serializationInclusion" value="NON_NULL" />-->
                                   </bean>
                            </property>

                     </bean>
              </mvc:message-converters>
       </mvc:annotation-driven>

    <context:component-scan base-package="controller"   />

    <context:property-placeholder properties-ref="configProperties" />

    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="location">
                <!--<value>/WEB-INF/localConfig.properties</value>-->
                <value>/WEB-INF/liveConfig.properties</value>
            </property>
    </bean>
    <!-- * ** *** **** Scheduler **** *** ** * -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="taskExecutorExample" class="schedular.TaskExample">
        <constructor-arg ref="taskExecutor" />
    </bean>

    <!-- * ** *** **** **** *** ** * -->
    <!-- * ** *** **** **** *** ** * -->
       <!-- * ** *** **** Interceptor  **** *** ** * -->
            <!-- * ** *** **** **** *** ** * -->
            <!-- * ** *** **** **** *** ** * -->

       <mvc:interceptors>
              <!-- ******* Admin Panel  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/admin/**"/>
                     <bean class="controller.interceptor.AdminAuthInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api-admin/**"/>
                     <bean class="controller.interceptor.AdminAuthInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                     <mvc:mapping path="/admin-signin"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <!-- ******* Public Web page  ************-->

           <mvc:interceptor>
               <mvc:mapping path="/static/**" />
               <bean class="controller.interceptor.WebInterceptor"/>
           </mvc:interceptor>
              <mvc:interceptor>
                 <mvc:mapping path="/signup" />
                 <mvc:mapping path="/signup/" />
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                 <mvc:mapping path="/signin"/>
                 <mvc:mapping path="/signin/"/>
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                 <mvc:mapping path="/home" />
                 <mvc:mapping path="/home/" />
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                 <mvc:mapping path="/home/category/**"/>
                  <mvc:mapping path="/home/partial-rendering/category/**"/>
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                 <mvc:mapping path="/product/details/**"/>
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                 <mvc:mapping path="/reset-password/**"/>
                 <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>


              <!-- ******* Auth  Web page  ************-->
           <mvc:interceptor>
               <mvc:mapping path="/paypal/rent-payment/payment-cancel/**" />
               <mvc:mapping path="/paypal/rent-payment/payment-success/**" />
               <bean class="controller.interceptor.WebAuthInterceptor"/>
           </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/user/dashboard/**"/>
                     <bean class="controller.interceptor.WebAuthInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/product/upload" />
                  <mvc:mapping path="/product/upload/" />
                     <bean class="controller.interceptor.WebAuthInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/rent/request/**" />
                     <bean class="controller.interceptor.WebAuthInterceptor"/>
              </mvc:interceptor>
               <mvc:interceptor>
                   <mvc:mapping path="/product/edit/**"/>
                   <bean class="controller.interceptor.WebAuthInterceptor"/>
               </mvc:interceptor>
               <mvc:interceptor>
                   <mvc:mapping path="/product/other-image/partial-load/**"/>
                   <bean class="controller.interceptor.WebAuthInterceptor"/>
               </mvc:interceptor>

              <!-- ******* Auth  File Upload [For Profile Edit ]  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/fileupload/upload/auth/**" />
                     <bean class="controller.interceptor.ServiceAuthInterceptor"/>
              </mvc:interceptor>


              <!-- ******* Public Service  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/api/product/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                     <mvc:mapping path="/api/signin/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api/signup/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api/signout/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/admin-signin/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>

              <mvc:interceptor>
                     <mvc:mapping path="/api/utility/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/fileupload/upload/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api/social-media/facebook/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api/social-media/google/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/api/reset-password/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>
           <mvc:interceptor>
               <mvc:mapping path="/api/rent-payment/**"/>
               <bean class="controller.interceptor.ServiceInterceptor"/>
           </mvc:interceptor>




              <!-- ******* Service with Auth check ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/api/auth/**"/>
                     <bean class="controller.interceptor.ServiceAuthInterceptor"/>
              </mvc:interceptor>
       </mvc:interceptors>


               <!-- * ** *** **** **** *** ** * -->
               <!-- * ** *** **** **** *** ** * -->
       <!-- * ** *** **** Interceptor Ends **** *** ** * -->
               <!-- * ** *** **** **** *** ** * -->
               <!-- * ** *** **** **** *** ** * -->

       <mvc:resources mapping="/admin-resources/**" location="/WEB-INF/admin-resources/"
                      cache-period="31556926"/>

       <mvc:resources mapping="/resources/**" location="/WEB-INF/resource/"
                      cache-period="31556926"/>



       <mvc:resources mapping="/identitydoc-file/**" location="${fileLocation.identitydoc}"
       cache-period="31556926"/>
       <mvc:resources mapping="/profile-image/**" location="${fileLocation.profile}"
       cache-period="31556926"/>
       <mvc:resources mapping="/images/**" location="${fileLocation.images}"
       cache-period="31556926"/>

<!--*******************************************************************************************************-->

       <bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
       <bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

 <!--*******************************************************************************************************-->




       <!-- ******************** View Resolve  *********************************** -->



       <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
       <!--<property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>-->
       <!--</bean>-->

       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
              <!--<bean id="viewResolver"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
              <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
              <property name="prefix" value="/WEB-INF/view/" />
              <property name="suffix" value=".jsp" />
       </bean>

       <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
              <property name="basename" value="messages"/>
       </bean>

       <bean id="multipartResolver"
             class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <!-- max upload size in bytes -->
              <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->

              <!-- max size of file in memory (in bytes) -->
              <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

       </bean>



       <bean id="rentGuruMail" class="library.RentGuruMail">
              <property name="mailSender" ref="mailSender"/>
       </bean>


       <!-- ******************** Mail Configuration *********************************** -->
       <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

              <property name="host" value="hera.ihostman.com"/>
              <property name="port" value="465"/>
              <property name="username" value="developer_beta@workspaceit.com"/>
              <property name="password" value="wsit_cabguard1"/>
              <property name="javaMailProperties">
                     <props>
                            <prop key="mail.transport.protocol">smtp</prop>
                            <prop key="mail.smtp.auth">true</prop>
                            <prop key="mail.smtp.starttls.enable">true</prop>
                            <prop key="mail.debug">true</prop>
                            <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                     </props>
              </property>
       </bean>

       <!-- ******************** Model Class, *********************************** -->
       <bean id="baseModel" class="model.BaseModel">
              <property name="sessionFactory" ref="sessionFactory"/>
       </bean>
       <bean id="rentTypeModel" class="model.RentTypeModel" parent="baseModel"   >
       </bean>
       <bean id="appLoginCredentialModel" class="model.AppLoginCredentialModel" parent="baseModel"   >
       </bean>
       <bean id="attributesModel" class="model.AttributesModel" parent="baseModel"   >
       </bean>
       <bean id="categoryModel" class="model.CategoryModel" parent="baseModel"   >
       </bean>
       <bean id="identityDocModel" class="model.TempFileModel" parent="baseModel"   >
       </bean>
       <bean id="identityTypeModel" class="model.IdentityTypeModel" parent="baseModel"   >
       </bean>
       <bean id="rentRequestModel" class="model.RentRequestModel" parent="baseModel"   >
       </bean>
       <bean id="rentProductModel" class="model.RentInfModel" parent="baseModel"   >
       </bean>
       <bean id="productModel" class="model.ProductModel" parent="baseModel"  >
       </bean>
       <bean id="productLocationModel" class="model.ProductLocationModel" parent="baseModel"   >
       </bean>
       <bean id="productRatingModel" class="model.ProductRatingModel" parent="baseModel"   >
       </bean>
       <bean id="productLikedModel" class="model.ProductLikedModel" parent="baseModel"   >
       </bean>
       <bean id="requestProductReturnModel" class="model.RentalProductReturnRequestModel" parent="baseModel"   >
       </bean>
       <bean id="rentalProductReturnedModel" class="model.RentalProductReturnedModel" parent="baseModel"   >
       </bean>
       <bean id="rentalProductReturnedHistoryModel" class="model.RentalProductReturnedHistoryModel" parent="baseModel"   >
       </bean>
        <bean id="rentPaymentModel" class="model.RentPaymentModel" parent="baseModel"   >
        </bean>

       <bean id="adminSitesFeesModel" class="model.admin.AdminSitesFeesModel" parent="baseModel"   >
       </bean>
       <bean id="adminPaypalCredentailModel" class="model.admin.AdminPaypalCredentailModel" parent="baseModel"   >
       </bean>
       <bean id="deviceInfoModel" class="model.DeviceInfoModel" parent="baseModel"   >
       </bean>
       <bean id="passwordResetModel" class="model.PasswordResetModel" parent="baseModel"   >
       </bean>
        <bean id="adminCmsPageModel" class="model.admin.AdminCmsPageModel" parent="baseModel"   >
        </bean>
        <bean id="paymentRefundModel" class="model.PaymentRefundModel" parent="baseModel"   >
        </bean>
        <bean id="userPaypalCredentialEntityModel" class="model.UserPaypalCredentialModel" parent="baseModel"   >
        </bean>
        <bean id="payoutModel" class="model.PayoutModel" parent="baseModel"   >
        </bean>
        <bean id="adminGlobalNotificationTemplateModel" class="model.AdminGlobalNotificationTemplateModel" parent="baseModel"   >
        </bean>
        <bean id="adminGlobalNotificationModel" class="model.AdminGlobalNotificationModel" parent="baseModel"   >
        </bean>
    <bean id="adminUnreadAlertCounterModel" class="model.AdminUnreadAlertCounterModel" parent="baseModel"   >
    </bean>





       <!-- ******************** Hibernate Session,Entity, *********************************** -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
              <property name="annotatedClasses">
                     <list>
                        <value>model.entity.app.AppCredential</value>
                        <value>model.entity.app.AuthCredential</value>
                        <value>model.entity.app.UserAddress</value>
                        <value>model.entity.app.UserInf</value>
                        <value>model.entity.app.AttributeValues</value>
                        <value>model.entity.app.Attributes</value>
                        <value>model.entity.app.Category</value>
                        <value>model.entity.app.product.rentable.RentalProductEntity</value>
                        <value>model.entity.app.product.rentable.ProductAttribute</value>
                        <value>model.entity.app.product.ProductCategory</value>
                        <value>model.entity.app.product.rentable.RentInf</value>
                        <value>model.entity.app.RentRequest</value>
                        <value>model.entity.app.TempFile</value>
                        <value>model.entity.app.IdentityType</value>
                        <value>model.entity.app.product.rentable.ProductAvailability</value>
                        <value>model.entity.app.product.rentable.ProductLocation</value>
                        <value>model.entity.app.RentType</value>
                        <value>model.entity.app.ProductRating</value>
                        <value>model.entity.app.product.ProductLiked</value>
                        <value>model.entity.app.product.rentable.RentalProductReturnRequest</value>
                        <value>model.entity.app.product.rentable.RentalProductReturned</value>
                        <value>model.entity.app.product.rentable.RentalProductReturnedHistory</value>
                        <value>model.entity.admin.AdminPaypalCredential</value>
                        <value>model.entity.admin.AdminSiteFeesEntity</value>
                        <value>model.entity.admin.AdminCmsPage</value>
                        <value>model.entity.app.PasswordResetsEntity</value>
                        <value>model.entity.app.DeviceInfoEntity</value>
                         <value>model.entity.app.payments.RentPayment</value>
                             <value>model.entity.app.payments.PaymentRefund</value>
                             <value>model.entity.app.payments.Payout</value>
                             <value>model.entity.app.payments.Transaction</value>
                             <value>model.entity.app.UserPaypalCredential</value>
                         <value>model.entity.developer.DeveloperExceptionLog</value>
                         <value>model.entity.admin.AdminGlobalNotification</value>
                         <value>model.entity.admin.AdminGlobalNotificationTemplate</value>
                         <value>model.entity.admin.AdminUnreadAlertCount</value>
                     </list>
              </property>
               <property name="hibernateProperties">
                   <props>
                       <prop key="hibernate.connection.url">${jdbc.url}</prop>
                       <prop key="hibernate.connection.username">${jdbc.username}</prop>
                       <prop key="hibernate.connection.password" >${jdbc.password}</prop>
                       <prop key="hibernate.connection.driver_class">${jdbc.driverClassName}</prop>
                       <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                       <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                       <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                   </props>
               </property>
       </bean>


       <!-- ******************** Email and Email Template   *********************************** -->

       <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
       <!--&lt;!&ndash;<property name="resourceLoaderPath"><value>/WEB-INF/mailTemplate/</value></property>&ndash;&gt;-->
       <!--</bean>-->










</beans>


        <!--<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/rentguru24?useTimezone=true&amp;serverTimezone=UTC</prop>-->
        <!--<prop key="hibernate.connection.username">root</prop>-->
        <!--<prop key="hibernate.connection.password" />-->
        <!--<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>-->
        <!--<prop key="hibernate.show_sql">true</prop>-->
        <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
        <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->


        <!--<property name="hibernateProperties">-->
        <!--<props>-->
            <!--<prop key="hibernate.connection.url">${jdbc.url}</prop>-->
            <!--<prop key="hibernate.connection.username">${jdbc.username}</prop>-->
            <!--<prop key="hibernate.connection.password" >${jdbc.password}</prop>-->
            <!--<prop key="hibernate.connection.driver_class">${jdbc.driverClassName}</prop>-->
            <!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
            <!--<prop key="hibernate.dialect">${jdbc.dialect}</prop>-->
            <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->
        <!--</props>-->
        <!--</property>-->