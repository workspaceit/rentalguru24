<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

       <mvc:annotation-driven>
              <mvc:message-converters>
                     <!--json.MappingJackson2HttpMessageConverter-->
                     <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                            <property name="objectMapper">
                                   <bean class="json.HibernateAwareObjectMapper" >
                                          <!--<property name="serializationInclusion" value="NON_NULL" />-->

                                   </bean>
                            </property>

                     </bean>
              </mvc:message-converters>
       </mvc:annotation-driven>

       <context:component-scan base-package="controller"   />

       <!-- * ** *** **** Interceptor  **** *** ** * -->

       <mvc:interceptors>
              <!-- ******* Admin Panel  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/admin/**"/>
                     <bean class="controller.interceptor.AdminAuthInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/admin-signin"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <!-- ******* Public Web page  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/signup"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/signin"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/home"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>
              <mvc:interceptor>
                     <mvc:mapping path="/product/details/**"/>
                     <bean class="controller.interceptor.WebInterceptor"/>
              </mvc:interceptor>

              <!-- ******* Auth  Web page  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/product/upload" />
                     <bean class="controller.interceptor.WebAuthInterceptor"/>
              </mvc:interceptor>


              <!-- ******* Public Service  ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/api/product/**"/>
                     <bean class="controller.interceptor.ServiceInterceptor"/>
              </mvc:interceptor>

              <!-- ******* Service with Auth check ************-->
              <mvc:interceptor>
                     <mvc:mapping path="/api/auth/**"/>
                     <bean class="controller.interceptor.ServiceAuthInterceptor"/>
              </mvc:interceptor>




       </mvc:interceptors>

       <!-- * ** *** **** Interceptor Ends **** *** ** * -->


       <mvc:resources mapping="/admin-resources/**" location="/WEB-INF/admin-resources/"
                      cache-period="31556926"/>

       <mvc:resources mapping="/resources/**" location="/WEB-INF/resource/"
                      cache-period="31556926"/>
       <mvc:resources mapping="/document-identity-file/**" location="/WEB-INF/resource/"
                      cache-period="31556926"/>

       <!--<mvc:resources mapping="/images/**" location="file:/home/mi/Projects/j2ee/rentguru24files/"-->
                      <!--cache-period="31556926"/>-->
       <mvc:resources mapping="/document-identity-file/**" location="/WEB-INF/resource/"
                      cache-period="31556926"/>
       <mvc:resources mapping="/images/**" location="file:/home/wsit/rentguru24files/"
                      cache-period="31556926"/>
       <bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
       <bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />


       <!-- ******************** View Resolve  *********************************** -->
       <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
              <!--<property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>-->
       <!--</bean>-->

       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
       <!--<bean id="viewResolver"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
              <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
              <property name="prefix" value="/WEB-INF/view/" />
              <property name="suffix" value=".jsp" />
       </bean>

       <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
              <property name="basename" value="messages"/>
       </bean>

       <bean id="multipartResolver"
             class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <!-- max upload size in bytes -->
              <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->

              <!-- max size of file in memory (in bytes) -->
              <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

       </bean>



       <bean id="rentGuruMail" class="library.RentGuruMail">
              <property name="mailSender" ref="mailSender"/>
       </bean>


       <!-- ******************** Mail Configuration *********************************** -->
       <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

              <property name="host" value="hera.ihostman.com"/>
              <property name="port" value="465"/>
              <property name="username" value="developer_beta@workspaceit.com"/>
              <property name="password" value="wsit_cabguard1"/>
              <property name="javaMailProperties">
                     <props>
                            <prop key="mail.transport.protocol">smtp</prop>
                            <prop key="mail.smtp.auth">true</prop>
                            <prop key="mail.smtp.starttls.enable">true</prop>
                            <prop key="mail.debug">true</prop>
                            <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                     </props>
              </property>
       </bean>


       <bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
              <property name="to" value="rafi101010@gmail.com"></property>
              <property name="from" value="rafi101010@gmail.com"></property>
              <property name="subject" value="FATAL - Application crash. Save your job !!"/>
       </bean>


       <!-- ******************** Model Class, *********************************** -->
       <bean id="baseModel" class="model.BaseModel">
              <property name="sessionFactory" ref="sessionFactory"/>
       </bean>
       <bean id="rentTypeModel" class="model.RentTypeModel" >
       </bean>
       <bean id="deviceInfoModel" class="model.DeviceInfoModel">
       </bean>
       <bean id="appLoginCredentialModel" class="model.AppLoginCredentialModel">
       </bean>
       <bean id="attributesModel" class="model.AttributesModel" >
       </bean>
       <bean id="categoryModel" class="model.CategoryModel" >
       </bean>
       <bean id="identityDocModel" class="model.TempFileModel" >
       </bean>
       <bean id="identityTypeModel" class="model.IdentityTypeModel" >
       </bean>
       <bean id="rentRequestModel" class="model.RentRequestModel" >
       </bean>
       <bean id="rentProductModel" class="model.RentProductModel" >
       </bean>
       <bean id="productModel" class="model.ProductModel" >
       </bean>
       <bean id="productRatingModel" class="model.ProductRatingModel" >
       </bean>
       <bean id="productLikedModel" class="model.ProductLikedModel" >
       </bean>



        <!-- ******************** Hibernate Session,Entity, *********************************** -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
              <property name="annotatedClasses">
                     <list>
                            <value>model.entity.app.AppCredential</value>
                            <value>model.entity.app.AuthCredential</value>
                            <value>model.entity.app.UserAddress</value>
                            <value>model.entity.app.UserInf</value>
                            <value>model.entity.app.AttributeValues</value>
                            <value>model.entity.app.Attributes</value>
                            <value>model.entity.app.Category</value>
                            <value>model.entity.app.product.rentable.RentalProductEntity</value>
                            <value>model.entity.app.product.rentable.ProductAttribute</value>
                            <value>model.entity.app.product.ProductCategory</value>
                            <value>model.entity.app.RentProduct</value>
                            <value>model.entity.app.RentRequest</value>
                            <value>model.entity.app.TempFile</value>
                            <value>model.entity.app.IdentityType</value>
                            <value>model.entity.app.product.rentable.ProductAvailability</value>
                            <value>model.entity.app.product.rentable.ProductLocation</value>
                            <value>model.entity.app.RentType</value>
                            <value>model.entity.app.ProductRating</value>
                            <value>model.entity.app.product.ProductLiked</value>
                     </list>
              </property>
              <property name="hibernateProperties">
                     <props>
                            <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/rentguru24</prop>
                            <prop key="hibernate.connection.username">root</prop>
                            <prop key="hibernate.connection.password" />
                            <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                            <prop key="hibernate.show_sql">true</prop>
                            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                            <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                     </props>
              </property>
       </bean>


       <!-- ******************** Email and Email Template   *********************************** -->

       <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
              <!--&lt;!&ndash;<property name="resourceLoaderPath"><value>/WEB-INF/mailTemplate/</value></property>&ndash;&gt;-->
       <!--</bean>-->










       </beans>


              <!--<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/rentguru24</prop>-->
              <!--<prop key="hibernate.connection.username">root</prop>-->
              <!--<prop key="hibernate.connection.password" />-->
              <!--<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>-->
              <!--<prop key="hibernate.show_sql">true</prop>-->
              <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
              <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->
